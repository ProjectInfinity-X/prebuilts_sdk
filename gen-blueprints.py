import os


def find(path, names):
    found = []
    for root, _, files in os.walk(path):
        for file_name in files:
            if file_name in names:
                abspath = os.path.abspath(os.path.join(root, file_name))
                rel_to_root = abspath.replace(os.path.abspath(path), '')
                found.append(rel_to_root[1:])  # strip leading /
    return found


def sdk_version_from_path(path):
    path = path.split('/')[0]
    try:
        return int(path)
    except ValueError:
        return path

def main():
    this_dir = os.path.dirname(__file__)
    if not this_dir:
        this_dir = "."
    prebuilts = find(this_dir, ('android.jar',))
    prebuilts.sort(key=sdk_version_from_path)

    blueprints = []
    for prebuilt in prebuilts:
        sdk_version = sdk_version_from_path(prebuilt)
        aidl = prebuilt[:-len('android.jar')] + 'framework.aidl'
        blueprints.append(
            'prebuilt_java_library {{\n'
            '    name: "sdk_v{version}",\n'
            '    srcs: ["{prebuilt}"],\n'
            '    aidl_preprocessed: "{aidl}"\n'
            '}}'.format(version=sdk_version, prebuilt=prebuilt, aidl=aidl))
    with open(os.path.join(this_dir, 'Blueprints'), 'w') as f:
        f.write('// THIS FILE IS AUTOGENERATED BY gen-blueprints.py\n')
        f.write('// DO NOT EDIT\n')
        f.write('\n')
        f.write('\n\n'.join(blueprints))
        f.write('\n')


if __name__ == '__main__':
    main()
